{"version":3,"file":"onuncaughtexception.js","sourceRoot":"","sources":["../../src/main/integrations/onuncaughtexception.ts"],"names":[],"mappings":";;;AAAA,uCAA6C;AAE7C,yCAA6D;AAC7D,yCAAwC;AACxC,uCAAkC;AAElC,gCAAgC;AAChC,MAAa,mBAAmB;IAAhC;QAIE,kBAAkB;QACX,SAAI,GAAW,mBAAmB,CAAC,EAAE,CAAC;IA+C/C,CAAC;IA7CC;;OAEG;IACI,SAAS;;QACd,MAAM,OAAO,GAAG,MAAA,IAAA,oBAAa,GAAE,CAAC,SAAS,EAAc,0CAAE,UAAU,EAAE,CAAC;QAEtE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,KAAY,EAAE,EAAE;YACtD,MAAM,IAAI,GAAG,IAAA,oBAAa,GAAE,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;YACjE,IAAI,IAAI,EAAE;gBACR,IAAA,oBAAa,GAAE,CAAC,SAAS,CAAC,CAAO,KAAK,EAAE,EAAE;oBACxC,KAAK,CAAC,iBAAiB,CAAC,CAAO,KAAY,EAAE,EAAE;wBAAC,OAAA,iCAC3C,KAAK,KACR,KAAK,EAAE,gBAAQ,CAAC,KAAK,IACrB,CAAA;sBAAA,CAAC,CAAC;oBAEJ,IAAI,QAAQ,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,IAAA,eAAO,EAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE;wBAClC,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;wBACvB,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;wBACjC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;wBAC7B,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;qBAC5B;oBAED,MAAM,UAAU,GAAG,IAAA,oBAAa,GAAE,CAAC,SAAS,EAAgB,CAAC;oBAC7D,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,iBAAiB,EAAE,KAAK,EAAE,EAAE,IAAA,oBAAa,GAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAChG,MAAM,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC;oBAExE,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,EAAE;wBACzB,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;qBAC7B;yBAAM,IAAI,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE;wBACjE,8DAA8D;wBAC9D,0DAA0D;wBAC1D,sCAAsC;wBACtC,OAAO,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;wBACrC,sCAAsC;wBACtC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACrB,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC;wBACxB,MAAM,KAAK,GAAG,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC;wBAC1E,MAAM,OAAO,GAAG,wBAAwB,KAAK,EAAE,CAAC;wBAChD,iBAAM,CAAC,YAAY,CAAC,iDAAiD,EAAE,OAAO,CAAC,CAAC;qBACjF;gBACH,CAAC,CAAA,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;AAnDH,kDAoDC;AAnDC,kBAAkB;AACJ,sBAAE,GAAW,qBAAqB,CAAC","sourcesContent":["import { getCurrentHub } from '@sentry/core';\nimport { NodeClient } from '@sentry/node';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport { isError } from '@sentry/utils';\nimport { dialog } from 'electron';\n\n/** Capture unhandled errors. */\nexport class OnUncaughtException implements Integration {\n  /** @inheritDoc */\n  public static id: string = 'OnUncaughtException';\n\n  /** @inheritDoc */\n  public name: string = OnUncaughtException.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    const options = getCurrentHub().getClient<NodeClient>()?.getOptions();\n\n    global.process.on('uncaughtException', (error: Error) => {\n      const self = getCurrentHub().getIntegration(OnUncaughtException);\n      if (self) {\n        getCurrentHub().withScope(async (scope) => {\n          scope.addEventProcessor(async (event: Event) => ({\n            ...event,\n            level: Severity.Fatal,\n          }));\n\n          let theError = error;\n          if (!isError(error) && error.stack) {\n            theError = new Error();\n            theError.message = error.message;\n            theError.stack = error.stack;\n            theError.name = error.name;\n          }\n\n          const nodeClient = getCurrentHub().getClient() as NodeClient;\n          nodeClient.captureException(theError, { originalException: error }, getCurrentHub().getScope());\n          await nodeClient.flush(nodeClient.getOptions().shutdownTimeout || 2000);\n\n          if (options?.onFatalError) {\n            options.onFatalError(error);\n          } else if (global.process.listenerCount('uncaughtException') <= 2) {\n            // In addition to this handler there is always one in Electron\n            // The dialog is only shown if there are no other handlers\n            // eslint-disable-next-line no-console\n            console.error('Uncaught Exception:');\n            // eslint-disable-next-line no-console\n            console.error(error);\n            const ref = error.stack;\n            const stack = ref !== undefined ? ref : `${error.name}: ${error.message}`;\n            const message = `Uncaught Exception:\\n${stack}`;\n            dialog.showErrorBox('A JavaScript error occurred in the main process', message);\n          }\n        });\n      }\n    });\n  }\n}\n"]}